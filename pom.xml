<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.xiaou</groupId>
    <artifactId>SXEasy-backend</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <name>SXEasy-backend</name>
    <url>https://github.com/xiaou61/SXEasy-backend</url>
    <modules>
        <module>xiaou-admin</module>
        <module>xiaou-common</module>
        <module>xiaou-modules</module>
    </modules>
    <description>SXEasy后端代码合集</description>

    <properties>

        <revision>0.0.1</revision>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <spring-boot.version>3.4.4</spring-boot.version>
        <hutool.version>5.8.35</hutool.version>
        <lombok.version>1.18.36</lombok.version>
        <springdoc.version>2.8.5</springdoc.version>




        <!-- 插件版本 -->
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <flatten-maven-plugin.version>1.3.0</flatten-maven-plugin.version>


        <!-- 打包默认跳过测试 -->
        <skipTests>true</skipTests>
    </properties>

    <!-- 依赖声明 -->
    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot的依赖配置-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- hutool 的依赖配置-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-bom</artifactId>
                <version>${hutool.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>



            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
                <version>${springdoc.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- common 的依赖配置-->
            <dependency>
                <groupId>com.xiaou</groupId>
                <artifactId>xiaou-common-bom</artifactId>
                <version>${revision}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.xiaou</groupId>
                <artifactId>xiaou-system</artifactId>
                <version>${revision}</version>
            </dependency>
        </dependencies>


    </dependencyManagement>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <!-- 插件的 GroupId，标识插件所属的组织 -->
                <groupId>org.codehaus.mojo</groupId>
                <!-- 插件的 ArtifactId，标识插件的名称 -->
                <artifactId>flatten-maven-plugin</artifactId>
                <!-- 插件的版本号，这里通过变量引用上面定义的版本号 -->
                <version>${flatten-maven-plugin.version}</version>
                <configuration>
                    <!-- 配置扁平化后的 POM 文件的名称 -->
                    <flattenedPomFilename>pom-xml-flattened</flattenedPomFilename>
                    <!-- 是否更新原始 POM 文件 -->
                    <updatePomFile>true</updatePomFile>
                    <!-- 指定扁平化模式，resolveCiFriendliesOnly 表示仅解析 CI 友好的占位符 -->
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <!-- 定义插件的执行配置 -->
                    <execution>
                        <!-- 执行的唯一标识 -->
                        <id>flatten</id>
                        <!-- 指定插件绑定的生命周期阶段 -->
                        <phase>process-resources</phase>
                        <!-- 定义执行的目标 -->
                        <goals>
                            <!-- 执行扁平化操作 -->
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <!-- 定义清理阶段的执行配置 -->
                    <execution>
                        <!-- 清理阶段的唯一标识 -->
                        <id>flatten.clean</id>
                        <!-- 指定清理阶段绑定的生命周期阶段 -->
                        <phase>clean</phase>
                        <!-- 定义清理阶段执行的目标 -->
                        <goals>
                            <!-- 执行清理操作 -->
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>


        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>

    </build>
</project>